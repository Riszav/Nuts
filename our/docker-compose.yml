  networks:
    solaar_network:

  
  version: '3'
  services:
    backend:
      container_name: backend
      build:
        context: ./backend
      env_file: 
      - .env
      volumes:
        - .:/app
        - nuts_static:/usr/src/app/back_static
        - nuts_media:/usr/src/app/back_media
      restart: always
      depends_on:
        - pgdb
      command: sh -c "python manage.py makemigrations && 
                      python manage.py migrate && 
                      python manage.py collectstatic --noinput &&
                      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
      networks:
        - solaar_network
      ports:
        - "8000:8000"

    frontend:
      image: node:alpine
      build:
        context: ./frontend
      container_name: frontend
      restart: always
      networks:
        - solaar_network
      env_file: 
        - .env
      ports:
        - "5173:5173"
      volumes:
        - ./frontend:/app
        - ./app/node_modules
      stdin_open: true
      tty: true      

    pgdb:
      image: postgres:latest
      container_name: postgres
      restart: always
      env_file: 
      - .env
      environment:
        POSTGRES_DB: ${SQL_DATABASE}
        POSTGRES_USER: ${SQL_USER}
        POSTGRES_PASSWORD: ${SQL_PASSWORD}
      networks:
        - solaar_network
      ports:
        - "5432:5432"
      volumes:
        - nuts_db:/var/lib/postgresql/data/

    nginx:
      container_name: nginx
      image: nginx
      networks:
        - solaar_network
      ports:
        - "80:80"
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        - nuts_static:/usr/src/app/back_static
        - nuts_media:/usr/src/app/back_media
      depends_on:
        - backend
        - frontend


  volumes:
    nuts_static:
    nuts_media:
    nuts_db:
